from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score

data = load_breast_cancer()
X = data.data
Y = data.target

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)

# สร้าง Decision Tree Classifier
model = DecisionTreeClassifier().fit(X_train, Y_train)

Y_pred = model.predict(X_test)

accuracy = accuracy_score(Y_test, Y_pred)
precision = precision_score(Y_test, Y_pred)
recall = recall_score(Y_test, Y_pred)

print(f"Accuracy: {accuracy:.4f}")
print(f"Precision: {precision:.4f}")
print(f"Recall: {recall:.4f}")
print('--------------------------------------------------------')

from sklearn.feature_selection import SelectKBest, f_classif

# เลือกฟีเจอร์โดยใช้ ANOVA
anova = SelectKBest(score_func=f_classif, k=5)
X_train_anova = anova.fit_transform(X_train, Y_train)
X_test_anova = anova.transform(X_test)

selected_feature = anova.get_support(indices=True)
feature_name = [data.feature_names[i] for i in selected_feature]
print(feature_name)

clf_anova = DecisionTreeClassifier()
clf_anova.fit(X_train_anova, Y_train)

Y_pred_anova = clf_anova.predict(X_test_anova)

accuracy_anova = accuracy_score(Y_test, Y_pred_anova)
precision_anova = precision_score(Y_test, Y_pred_anova)
recall_anova = recall_score(Y_test, Y_pred_anova)

print(f"ANOVA - Accuracy: {accuracy_anova:.4f}")
print(f"ANOVA - Precision: {precision_anova:.4f}")
print(f"ANOVA - Recall: {recall_anova:.4f}")
print('--------------------------------------------------------')

from sklearn.feature_selection import RFE

# กำหนดค่า k = 30 (ใช้ฟีเจอร์ทั้งหมด)
k = 5

# เลือกฟีเจอร์โดยใช้ RFE
rfe = RFE(estimator=DecisionTreeClassifier(), n_features_to_select=k)
X_train_rfe = rfe.fit_transform(X_train, Y_train)
X_test_rfe = rfe.transform(X_test)

selected_feature = rfe.get_support(indices=True)
feature_name = [data.feature_names[i] for i in selected_feature]
print(feature_name)

clf_rfe = DecisionTreeClassifier()
clf_rfe.fit(X_train_rfe, Y_train)

Y_pred_rfe = clf_rfe.predict(X_test_rfe)

accuracy_rfe = accuracy_score(Y_test, Y_pred_rfe)
precision_rfe = precision_score(Y_test, Y_pred_rfe)
recall_rfe = recall_score(Y_test, Y_pred_rfe)

print(f"RFE - Accuracy: {accuracy_rfe:.4f}")
print(f"RFE - Precision: {precision_rfe:.4f}")
print(f"RFE - Recall: {recall_rfe:.4f}")


